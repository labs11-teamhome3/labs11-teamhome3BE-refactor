type Mutation {
    createUser(name: String!): User!
    createTodo(description: String!, partOf: ID!, completed: Boolean): Todo
    deleteTodo(id: String!): String!
    updateTodo(id: String!, description: String!, completed: Boolean): Todo
    
    createTodoList(description: String!, ownedBy: String!, assignedTo: String!, completed: Boolean): TodoList
    deleteTodoList(id: String!): String!
    updateTodoList(id: String!, description: String!, completed: Boolean): TodoList
    
    createTeam(teamName: String!): Team
    deleteTeam(id: String!): String!
    
    updateTeamName(id: String!, teamName: String!): Team
    addTodoListToTeam(teamId: ID!, todoListId: ID!): Team
    removeTodoListFromTeam(teamId: ID!, todoListId: ID!): Team
    addUserToTeam(userId: ID!, teamId: ID!): Team
    removeUserFromTeam(userId: ID!, teamId: ID!): Team


    
    
    toggleTodoComplete(todoId: ID!): Todo
    toggleTodoListComplete(todoListId: ID!): TodoList
    addUserToOwners(userId: ID!, todoListId: ID!): TodoList
    addUserToAssignees(userId: ID!, todoListId: ID!): TodoList
    removeUserFromOwners(userId: ID!, todoListId: ID!): TodoList
    removeUserFromAssignees(userId: ID!, todoListId: ID!): TodoList

    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password:String!): AuthPayload
}

type Query {
    info: String!
    todoes: [Todo]
    todo(id: ID!): Todo!
    users: [User]
    user(id: ID!): User!
    todoLists: [TodoList]
    todoList(id: ID!): TodoList!
    teams: [Team]
    team(id: ID!): Team!
}

type TodoList {
    id: ID!
    description: String!
    ownedBy: [User!]! 
    assignedTo: [User!]! 
    todos: [Todo!]!
    completed: Boolean
    inTeam: Team
}

type Todo {
    id: ID!
    description: String!
    partOf: TodoList
    completed: Boolean
}

type User {
    id: ID!
    name: String!
    todoListsOwned: [TodoList] 
    todoListsAssigned: [TodoList]
    inTeam: Team
    authId: String
}

type Team {
    id: ID!
    teamName: String!
    members: [User!]!
    todoLists: [TodoList]
}

type AuthPayload {
    token: String
    user: User
}