type TodoList {
    id: ID! @unique
    createdAt: DateTime!
    description: String!
    ownedBy: [User!]! @relation(name: "OwnedBy")
    assignedTo: [User!]! @relation(name: "AssignedTo")
    todos: [Todo!]! @relation(name: "TodosInList", onDelete: CASCADE)
    completed: Boolean @default(value: "false")
    inTeam: Team 
}

type Todo {
    id: ID! @unique
    description: String!
    partOf: TodoList @relation(name: "TodosInList", onDelete: SET_NULL)
    completed: Boolean @default(value: "false")
}

type User {
    id: ID! @unique
    authId: String
    createdAt: DateTime!
    name: String!
    todoListsOwned: [TodoList] @relation(name: "OwnedBy")
    todoListsAssigned: [TodoList] @relation(name: "AssignedTo")
    inTeam: Team 
}

type Team {
    id: ID! @unique
    teamName: String!
    members: [User!] 
    todoLists: [TodoList!]
    messages: [Message!]
    events: [Event]
    tags: [Tag]
}

type Message {
    id: ID! @unique
    title: String!
    creator: User! @relation(name: "Creator")
    inTeam: Team!
    content: String!
    images: [String]
    tag: Tag
    comments: [MessageComment]
    subscribedUsers: [User] @relation(name: "Subscribed")
    createdAt: DateTime!
}

type MessageComment {
    id: ID! @unique
    content: String!
    user: User! @relation(name: "Commentor")
    message: Message!
    image: String
    likes: [User] @relation(name: "Likes")
    createdAt: DateTime!
}

type Tag {
    id: ID! @unique
    name: String!
    team: Team
}

type Event {
    id: ID! @unique
    team: Team!
    user: User
    action_string: String!
    object_string: String!
    createdAt: DateTime!
}