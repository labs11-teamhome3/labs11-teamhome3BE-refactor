enum Role {
    ADMIN
    GENERAL
}
    
type TodoList {
  id: ID! @unique
  createdAt: DateTime!
  description: String!
  ownedBy: [User!]! @relation(name: "OwnedBy")
  assignedTo: [User!]! @relation(name: "AssignedTo")
  todos: [Todo!]! @relation(name: "TodosInList", onDelete: CASCADE)
  completed: Boolean @default(value: "false")
  inTeam: Team @relation(name: "TodoListsInTeam", onDelete: SET_NULL)
}

type Todo {
  id: ID! @unique
  description: String!
  partOf: TodoList @relation(name: "TodosInList", onDelete: SET_NULL)
  completed: Boolean @default(value: "false")
}

type User {
  id: ID! @unique
  authId: String @unique
  createdAt: DateTime!
  identity: String
  name: String
  todoListsOwned: [TodoList] @relation(name: "OwnedBy")
  todoListsAssigned: [TodoList] @relation(name: "AssignedTo")
  inTeam: [Team]
  role: Role
  email: String
  phone: String
  profilePic: String
  events: [Event] @relation(name: "EventCreator")
}

type Team {
  id: ID! @unique
  teamName: String!
  members: [User!]
  todoLists: [TodoList!] @relation(name: "TodoListsInTeam", onDelete: CASCADE)
  messages: [Message!] @relation(name: "MessageInTeam", onDelete: CASCADE)
  events: [Event] @relation(name: "EventInTeam", onDelete: CASCADE)
  tags: [Tag] @relation(name: "TagInTeam", onDelete: CASCADE)
  documents: [Document] @relation(name: "DocumentInTeam", onDelete: CASCADE)
  folders: [Folder] @relation(name: "FolderInTeam", onDelete: CASCADE)
  premium: Boolean @default(value: "false")
}

type Message {
  id: ID! @unique
  title: String!
  creator: User! @relation(name: "MessageCreator")
  inTeam: Team! @relation(name: "MessageInTeam", onDelete: SET_NULL)
  content: String!
  images: [String]
  tag: Tag
  likes: [User] @relation(name: "MessageLiker")
  comments: [MessageComment] @relation(name: "MessageComments", onDelete: CASCADE)
  subscribedUsers: [User] @relation(name: "MessageSubscribers")
  createdAt: DateTime!
}

type MessageComment {
  id: ID! @unique
  content: String!
  user: User! @relation(name: "MessageCommentor")
  message: Message! @relation(name: "MessageComments", onDelete: SET_NULL)
  image: String
  likes: [User] @relation(name: "MessageCommentLikers")
  createdAt: DateTime!
}

type Tag {
  id: ID! @unique
  name: String!
  team: Team@relation(name: "TagInTeam", onDelete: SET_NULL)
}

type Event {
  id: ID! @unique
  team: Team! @relation(name: "EventInTeam", onDelete: SET_NULL)
  user: User @relation(name: "EventCreator")
  action_string: String!
  object_string: String!
  createdAt: DateTime!
}

type Document {
  id: ID! @unique
  doc_url: String!
  user: User! @relation(name: "DocumentCreator")
  folder: Folder
  team: Team! @relation(name: "DocumentInTeam", onDelete: SET_NULL)
  title: String!
  textContent: String!
  tag: Tag
  images: [String]
  comments: [DocumentComment] @relation(name: "DocumentComments", onDelete: CASCADE)
  subscribedUsers: [User] @relation(name: "DocumentSubscribers")
  createdAt: DateTime!
}

type DocumentComment {
  id: ID! @unique
  user: User! @relation(name: "DocumentCommentor")
  document: Document! @relation(name: "DocumentComments", onDelete: SET_NULL)
  content: String!
  image: String
  likes: [User] @relation(name: "DocumentCommentLikers")
  createdAt: DateTime!
}

type Folder {
  id: ID! @unique
  title: String!
  user: User!
  team: Team! @relation(name: "FolderInTeam", onDelete: SET_NULL)
  createdAt: DateTime!
  documents: [Document]
}
